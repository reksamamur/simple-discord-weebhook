{"version":3,"sources":["page/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","useState","hookURL","setHookURL","hookMessage","setHookMessage","prepareForMessage","url","message","Axios","post","content","then","response","console","log","catch","error","className","htmlFor","onChange","ev","target","value","name","type","required","placeholder","onClick","e","preventDefault","alert","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAmGeA,EA/FQ,WAAO,IAAD,EACGC,mBAAiB,IADpB,mBACpBC,EADoB,KACXC,EADW,OAEWF,mBAAS,IAFpB,mBAEpBG,EAFoB,KAEPC,EAFO,KAcrBC,EAAoB,SAACC,EAAaC,GACtCC,IAAMC,KAAKH,EAAK,CACdI,QAASH,IAERI,MAAK,SAACC,GACLC,QAAQC,IAAIF,MAEbG,OAAM,SAACC,GACNH,QAAQC,IAAIE,EAAMT,aAIxB,OACE,qBAAKU,UAAU,oBAAf,SACE,uBAAMA,UAAU,mFAAhB,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAIA,UAAU,uDAAd,UACE,sBAAMA,UAAU,kBAAhB,qBACA,sBAAMA,UAAU,kCAAhB,0BAIJ,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,mDAAf,UACE,oBAAIA,UAAU,0BAAd,SACE,sBAAMA,UAAU,kBAAhB,+BAEF,uBAAMA,UAAU,gBAAhB,UACE,uBACEC,QAAQ,WACRD,UAAU,gDAFZ,iCAMA,8BACE,uBACEE,SAAU,SAACC,GAAD,OACRlB,EAAWkB,EAAGC,OAAOC,QAEvBC,KAAK,WACLC,KAAK,OACLC,UAAQ,EACRC,YAAY,eACZT,UAAU,uLAId,sBAAKA,UAAU,OAAf,UACE,uBACEC,QAAQ,UACRD,UAAU,gDAFZ,8BAMA,0BACEE,SAAU,SACRC,GADQ,OAEChB,EAAegB,EAAGC,OAAOC,QACpCC,KAAK,UACLE,UAAQ,EACRC,YAAY,eACZT,UAAU,wLAId,8BACE,wBACEU,QA7EC,SAACC,GAChBA,EAAEC,iBAEc,KAAZ5B,GAAkC,KAAhBE,EACpBE,EAAkBJ,EAASE,GAE3B2B,MAAM,4BAwEMb,UAAU,gIAFZ,kCCxEDc,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,OCOSe,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.3fd3e5f5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport Axios from \"axios\";\r\n\r\nconst Home: React.FC = () => {\r\n  const [hookURL, setHookURL] = useState<string>(\"\");\r\n  const [hookMessage, setHookMessage] = useState(\"\");\r\n\r\n  const sendData = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    if (hookURL !== \"\" && hookMessage !== \"\") {\r\n      prepareForMessage(hookURL, hookMessage);\r\n    } else {\r\n      alert(\"sheeessss its empty man\")\r\n    }\r\n  };\r\n\r\n  const prepareForMessage = (url: string, message: string): void => {\r\n    Axios.post(url, {\r\n      content: message,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\r\n        <div className=\"text-left\">\r\n          <h3 className=\"text-4xl tracking-tight font-extrabold text-gray-900\">\r\n            <span className=\"block xl:inline\">Webhook</span>\r\n            <span className=\"block text-indigo-600 xl:inline\">Discord</span>\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"text-left\">\r\n          <div className=\"mt-5 block rounded-lg p-4 border border-gray-200\">\r\n            <h3 className=\"text-2xl tracking-tight\">\r\n              <span className=\"block xl:inline\">Message section</span>\r\n            </h3>\r\n            <form className=\"relative mt-5\">\r\n              <label\r\n                htmlFor=\"weebhook\"\r\n                className=\"text-lg tracking-tight font-medium text-black\"\r\n              >\r\n                Webhook Discord URL\r\n              </label>\r\n              <div>\r\n                <input\r\n                  onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\r\n                    setHookURL(ev.target.value)\r\n                  }\r\n                  name=\"weebhook\"\r\n                  type=\"text\"\r\n                  required\r\n                  placeholder=\"Weebhook URL\"\r\n                  className=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none w-full text-sm text-black placeholder-gray-500 border border-gray-200 rounded-md py-3 pl-5\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mt-5\">\r\n                <label\r\n                  htmlFor=\"message\"\r\n                  className=\"text-lg tracking-tight font-medium text-black\"\r\n                >\r\n                  WeebHook Message\r\n                </label>\r\n                <textarea\r\n                  onChange={(\r\n                    ev: React.ChangeEvent<HTMLTextAreaElement>\r\n                  ): void => setHookMessage(ev.target.value)}\r\n                  name=\"message\"\r\n                  required\r\n                  placeholder=\"Message here\"\r\n                  className=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none w-full text-sm text-black placeholder-gray-500 border border-gray-200 rounded-md py-3 pl-5\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <button\r\n                  onClick={sendData}\r\n                  className=\"flex items-center justify-center text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 py-2 px-8\"\r\n                >\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./page/Home\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}