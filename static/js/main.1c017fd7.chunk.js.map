{"version":3,"sources":["../node_modules/discord.js/src/client/websocket/handlers sync /^/.*/.js$","components/Profile.tsx","components/Validation.tsx","page/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","customStyles","content","top","bottom","left","right","Modal","setAppElement","Profile","hookName","hookChannelId","useState","modal","setModal","setTempHookName","setTempHookAvatar","setTempHookChannelId","className","onClick","style","isOpen","htmlFor","onChange","ev","target","value","name","type","defaultValue","placeholder","Validation","text","valid","color","Home","hookURL","setHookURL","hookMessage","setHookMessage","hookId","setHookId","hookToken","setHookToken","setHookName","hookChannel","setHookChannel","setHookGuild","setHookAvatar","visible","setVisible","span","setSpan","visibleValidation","setVisibleValidation","validation","setValidation","textValidation","setTextValidation","colorValidation","setColorValidation","Discord","WebhookClient","Client","url","a","Axios","get","then","response","data","getHook","token","channel_id","avatar","guild_id","prepareValidation","catch","error","console","log","message","useEffect","fetchWebhook","channel","guild","prepareForMessage","post","required","preventDefault","alert","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c017fd7.chunk.js","sourcesContent":["var map = {\n\t\"./CHANNEL_CREATE.js\": 257,\n\t\"./CHANNEL_DELETE.js\": 258,\n\t\"./CHANNEL_PINS_UPDATE.js\": 259,\n\t\"./CHANNEL_UPDATE.js\": 260,\n\t\"./GUILD_BAN_ADD.js\": 261,\n\t\"./GUILD_BAN_REMOVE.js\": 262,\n\t\"./GUILD_CREATE.js\": 263,\n\t\"./GUILD_DELETE.js\": 264,\n\t\"./GUILD_EMOJIS_UPDATE.js\": 265,\n\t\"./GUILD_INTEGRATIONS_UPDATE.js\": 266,\n\t\"./GUILD_MEMBERS_CHUNK.js\": 267,\n\t\"./GUILD_MEMBER_ADD.js\": 268,\n\t\"./GUILD_MEMBER_REMOVE.js\": 269,\n\t\"./GUILD_MEMBER_UPDATE.js\": 270,\n\t\"./GUILD_ROLE_CREATE.js\": 271,\n\t\"./GUILD_ROLE_DELETE.js\": 272,\n\t\"./GUILD_ROLE_UPDATE.js\": 273,\n\t\"./GUILD_UPDATE.js\": 274,\n\t\"./INVITE_CREATE.js\": 275,\n\t\"./INVITE_DELETE.js\": 276,\n\t\"./MESSAGE_CREATE.js\": 277,\n\t\"./MESSAGE_DELETE.js\": 278,\n\t\"./MESSAGE_DELETE_BULK.js\": 279,\n\t\"./MESSAGE_REACTION_ADD.js\": 280,\n\t\"./MESSAGE_REACTION_REMOVE.js\": 281,\n\t\"./MESSAGE_REACTION_REMOVE_ALL.js\": 282,\n\t\"./MESSAGE_REACTION_REMOVE_EMOJI.js\": 283,\n\t\"./MESSAGE_UPDATE.js\": 284,\n\t\"./PRESENCE_UPDATE.js\": 285,\n\t\"./READY.js\": 286,\n\t\"./RESUMED.js\": 287,\n\t\"./TYPING_START.js\": 288,\n\t\"./USER_UPDATE.js\": 289,\n\t\"./VOICE_SERVER_UPDATE.js\": 290,\n\t\"./VOICE_STATE_UPDATE.js\": 291,\n\t\"./WEBHOOKS_UPDATE.js\": 292,\n\t\"./index.js\": 138\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 256;","import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport Modal from \"react-modal\";\r\n\r\ninterface Props {\r\n  hookName: string;\r\n  hookChannelId: string;\r\n}\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"30%\",\r\n    bottom: \"30%\",\r\n    left: \"20%\",\r\n    right: \"20%\",\r\n  },\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\nconst Profile: React.FC<Props> = ({ hookName, hookChannelId }) => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [tempHookName, setTempHookName] = useState<string>(\"\");\r\n  const [tempHookAvatar, setTempHookAvatar] = useState<string>(\"\");\r\n  const [tempHookChannelId, setTempHookChannelId] = useState<string>(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <article>\r\n          <div>\r\n            <h2 className=\"text-lg font-semibold text-black mb-0.5\">\r\n              {hookName}\r\n            </h2>\r\n            <dl className=\"flex flex-wrap text-sm font-medium whitespace-pre\">\r\n              <div className=\"flex-none w-full mt-0.5 font-normal\">\r\n                <dt className=\"inline\">Channel id: </dt>{\" \"}\r\n                <dd className=\"inline text-black\">{hookChannelId}</dd>\r\n              </div>\r\n            </dl>\r\n            <button\r\n              onClick={() => setModal(true)}\r\n              className=\"mt-5 mx-auto py-1 px-5 rounded-md border border-gray-300\"\r\n            >\r\n              Edit\r\n            </button>\r\n          </div>\r\n        </article>\r\n        <Modal style={customStyles} isOpen={modal}>\r\n          <h1 className=\"flex-auto text-xl font-semibold\">Edit WebHook</h1>\r\n          <form className=\"relative\">\r\n            <div className=\"mt-5\">\r\n              <label\r\n                htmlFor=\"weebhook_name\"\r\n                className=\"tracking-tight font-medium text-black\"\r\n              >\r\n                Webhook Name\r\n              </label>\r\n              <input\r\n                onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\r\n                  setTempHookName(ev.target.value)\r\n                }\r\n                name=\"weebhook_name\"\r\n                type=\"text\"\r\n                defaultValue={hookName}\r\n                placeholder=\"Webhook name\"\r\n                className=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none w-full text-sm text-black placeholder-gray-500 border border-gray-200 rounded-md py-3 pl-5\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mt-3\">\r\n              <label\r\n                htmlFor=\"weebhook_channel_id\"\r\n                className=\"tracking-tight font-medium text-black\"\r\n              >\r\n                Webhook Channel Id\r\n              </label>\r\n              <input\r\n                onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\r\n                  setTempHookChannelId(ev.target.value)\r\n                }\r\n                name=\"weebhook_channel_id\"\r\n                type=\"text\"\r\n                defaultValue={hookChannelId}\r\n                placeholder=\"Webhook Channel\"\r\n                className=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none w-full text-sm text-black placeholder-gray-500 border border-gray-200 rounded-md py-3 pl-5\"\r\n              />\r\n            </div>\r\n            <div className=\"mt-3\">\r\n              <label\r\n                htmlFor=\"weebhook_avatar\"\r\n                className=\"tracking-tight font-medium text-black\"\r\n              >\r\n                Webhook Avatar URL\r\n              </label>\r\n              <input\r\n                onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\r\n                  setTempHookAvatar(ev.target.value)\r\n                }\r\n                name=\"weebhook_avatar\"\r\n                type=\"text\"\r\n                placeholder=\"Webhook Avatar\"\r\n                className=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none w-full text-sm text-black placeholder-gray-500 border border-gray-200 rounded-md py-3 pl-5\"\r\n              />\r\n            </div>\r\n          </form>\r\n          <div className=\"mt-5 flex-auto flex space-x-3\">\r\n            <button\r\n              onClick={() => setModal(false)}\r\n              className=\"py-1 px-5 items-center justify-center rounded-md border border-gray-300\"\r\n              type=\"button\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className=\"py-1 px-5 items-center justify-center rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { Check, X } from \"react-feather\";\r\n\r\ninterface Props {\r\n  text: string;\r\n  valid: boolean;\r\n  color: string;\r\n}\r\n\r\n// text-green-500 text-red-500\r\n\r\nconst Validation: React.FC<Props> = ({ text, valid, color }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center font-medium my-1\">\r\n        {valid ? (\r\n          <Check className=\"text-green-500\" />\r\n        ) : (\r\n          <X className=\"text-red-500\" />\r\n        )}\r\n        <div className=\"ml-2\">\r\n          <span className={color}>{text}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Validation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport Axios from \"axios\";\r\nimport Discord from \"discord.js\";\r\n\r\nimport Profile from \"../components/Profile\";\r\nimport Validation from \"../components/Validation\";\r\n\r\nconst Home: React.FC = () => {\r\n  const [hookURL, setHookURL] = useState<string>(\"\");\r\n  const [hookMessage, setHookMessage] = useState(\"\");\r\n\r\n  const [hookId, setHookId] = useState(\"\");\r\n  const [hookToken, setHookToken] = useState(\"\");\r\n  const [hookName, setHookName] = useState(\"\");\r\n  const [hookChannel, setHookChannel] = useState(\"\");\r\n  const [hookGuild, setHookGuild] = useState(\"\");\r\n  const [hookAvatar, setHookAvatar] = useState(\"\");\r\n\r\n  const [visible, setVisible] = useState(\"hidden\");\r\n  const [span, setSpan] = useState(\"col-span-2\");\r\n\r\n  const [visibleValidation, setVisibleValidation] = useState<string>(\"hidden\");\r\n  const [validation, setValidation] = useState<boolean>(false);\r\n  const [textValidation, setTextValidation] = useState<string>(\"\");\r\n  const [colorValidation, setColorValidation] = useState<string>(\"\");\r\n\r\n  const webHookClient = new Discord.WebhookClient(hookId, hookToken);\r\n  const client = new Discord.Client();\r\n\r\n  useEffect(() => {\r\n    fetchWebhook(hookURL);\r\n  }, [hookURL]);\r\n\r\n  async function fetchWebhook(url: string) {\r\n    if (url !== \"\") {\r\n      await Axios.get(url)\r\n        .then((response) => {\r\n          const data = response.data;\r\n          getHook(\r\n            data.id,\r\n            data.token,\r\n            data.name,\r\n            data.channel_id,\r\n            data.avatar,\r\n            data.guild_id\r\n          );\r\n          setVisible(\"\");\r\n          setSpan(\"col-span-1\");\r\n          setVisibleValidation(\"\")\r\n          prepareValidation(true, \"Valid\", \"text-green-500\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.message);\r\n          setVisible(\"hidden\");\r\n          setSpan(\"col-span-2\");\r\n          prepareValidation(false, \"Invalid\", \"text-red-500\");\r\n        });\r\n    } else {\r\n      console.log(\"wait ok\");\r\n      setVisible(\"hidden\");\r\n      setSpan(\"col-span-2\");\r\n      setVisibleValidation(\"hidden\");\r\n    }\r\n  }\r\n\r\n  const getHook = (\r\n    id: string,\r\n    token: string,\r\n    name: string,\r\n    channel: string,\r\n    avatar: string,\r\n    guild: string\r\n  ) => {\r\n    setHookId(id);\r\n    setHookToken(token);\r\n    setHookName(name);\r\n    setHookChannel(channel);\r\n    setHookAvatar(avatar);\r\n    setHookGuild(guild);\r\n  };\r\n\r\n  const sendData = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    if (hookURL !== \"\" && hookMessage !== \"\") {\r\n      prepareForMessage(hookURL, hookMessage);\r\n    } else {\r\n      alert(\"sheeessss its empty man\");\r\n    }\r\n  };\r\n\r\n  const prepareForMessage = (url: string, message: string): void => {\r\n    Axios.post(url, {\r\n      content: message,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n\r\n  const prepareValidation = (valid: boolean, text: string, color: string) => {\r\n    setValidation(valid);\r\n    setTextValidation(text);\r\n    setColorValidation(color);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\r\n        <div className=\"text-left\">\r\n          <h3 className=\"text-4xl tracking-tight font-extrabold text-gray-900\">\r\n            <span className=\"block xl:inline\">Webhook</span>\r\n            <span className=\"block text-indigo-600 xl:inline\">Discord</span>\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"text-left\">\r\n          <div className=\"mt-5\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className={span}>\r\n                <label\r\n                  htmlFor=\"weebhook\"\r\n                  className=\"text-lg tracking-tight font-medium text-black\"\r\n                >\r\n                  Webhook Discord URL\r\n                </label>\r\n                <input\r\n                  onChange={(ev: React.ChangeEvent<HTMLInputElement>): void =>\r\n                    setHookURL(ev.target.value)\r\n                  }\r\n                  name=\"weebhook\"\r\n                  type=\"text\"\r\n                  required\r\n                  placeholder=\"Weebhook URL\"\r\n                  className=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none w-full text-sm text-black placeholder-gray-500 border border-gray-200 rounded-md py-3 pl-5\"\r\n                />\r\n                <div className={visibleValidation}>\r\n                  <Validation\r\n                    text={textValidation}\r\n                    valid={validation}\r\n                    color={colorValidation}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={visible}>\r\n                <div className=\"block rounded-lg p-4 border border-gray-200\">\r\n                  <Profile hookName={hookName} hookChannelId={hookChannel} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-5 block rounded-lg p-4 border border-gray-200\">\r\n            <form className=\"relative\">\r\n              <div>\r\n                <label\r\n                  htmlFor=\"message\"\r\n                  className=\"text-lg tracking-tight font-medium text-black\"\r\n                >\r\n                  WeebHook Message\r\n                </label>\r\n                <textarea\r\n                  onChange={(\r\n                    ev: React.ChangeEvent<HTMLTextAreaElement>\r\n                  ): void => setHookMessage(ev.target.value)}\r\n                  name=\"message\"\r\n                  required\r\n                  placeholder=\"Message here\"\r\n                  className=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none w-full text-sm text-black placeholder-gray-500 border border-gray-200 rounded-md py-3 pl-5\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <button\r\n                  onClick={sendData}\r\n                  className=\"flex items-center justify-center text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 py-2 px-8\"\r\n                >\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./page/Home\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}